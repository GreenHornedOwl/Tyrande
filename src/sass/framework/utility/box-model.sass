@use "./../variables" as *
//spacings default values: [1:1,2:2,3:4,4:6,5:12] => 0.5rem/1rem/2rem/3rem/6rem

//Margins & Paddings
.mx-auto
  margin-left: auto
  margin-right: auto
.mr-auto
  margin-right: auto
.ml-auto
  margin-left: auto

@each $key, $value in $spacings
  .mx-#{$key}
    margin-left: calc(#{$value} * var(--spacing-unit, 0.5rem))
    margin-right: calc(#{$value} * var(--spacing-unit, 0.5rem))
  .my-#{$key}
    margin-top: calc(#{$value} * var(--spacing-unit, 0.5rem))
    margin-bottom: calc(#{$value} * var(--spacing-unit, 0.5rem))
  .px-#{$key}
    padding-left: calc(#{$value} * var(--spacing-unit, 0.5rem))
    padding-right: calc(#{$value} * var(--spacing-unit, 0.5rem))
  .py-#{$key}
    padding-top: calc(#{$value} * var(--spacing-unit, 0.5rem))
    padding-bottom: calc(#{$value} * var(--spacing-unit, 0.5rem))

@each $prop, $value in $boxModel
  @each $prop2, $value2 in $positions
    @each $spacing, $spacingValue in $spacings
      .child-#{$prop}#{$prop2}-#{$spacing}
        > *
          #{$value}-#{$value2}: calc(#{$spacingValue} * var(--spacing-unit, 0.5rem))
          @if $prop2 == "r"
            &:last-child
              #{$value}-#{$value2}: 0
          @if $prop2 == "b"
            &:last-child
              #{$value}-#{$value2}: 0
          @else if $prop2 == "l"
            &:first-child
              #{$value}-#{$value2}: 0
          @else if $prop2 == "t"
            &:first-child
              #{$value}-#{$value2}: 0
//ml-1 overwrites child-ml-2            
@each $prop, $value in $boxModel
  @each $prop2, $value2 in $positions
    @each $spacing, $spacingValue in $spacings
      .#{$prop}-#{$spacing}
        #{$value}-#{$value2}: calc(#{$spacingValue} * var(--spacing-unit, 0.5rem))
      .#{$prop}#{$prop2}-#{$spacing}
        #{$value}-#{$value2}: calc(#{$spacingValue} * var(--spacing-unit, 0.5rem))
        


@each $breakpoint, $breakpointValue in $breakpoints
  @media (min-width: #{$breakpointValue})
    @each $key, $value in $spacings
      .mx-#{$breakpoint}-#{$key}
        margin-left: calc(#{$value} * var(--spacing-unit, 0.5rem))
        margin-right: calc(#{$value} * var(--spacing-unit, 0.5rem))
      .my-#{$breakpoint}-#{$key}
        margin-top: calc(#{$value} * var(--spacing-unit, 0.5rem))
        margin-bottom: calc(#{$value} * var(--spacing-unit, 0.5rem))
      .px-#{$breakpoint}-#{$key}
        padding-left: calc(#{$value} * var(--spacing-unit, 0.5rem))
        padding-right: calc(#{$value} * var(--spacing-unit, 0.5rem))
      .py-#{$breakpoint}-#{$key}
        padding-top: calc(#{$value} * var(--spacing-unit, 0.5rem))
        padding-bottom: calc(#{$value} * var(--spacing-unit, 0.5rem))
      @each $prop, $value in $boxModel
        @each $prop2, $value2 in $positions
          @each $spacing, $spacingValue in $spacings
            .child-#{$prop}#{$prop2}-#{$breakpoint}-#{$spacing}
              > *
                #{$value}-#{$value2}: calc(#{$spacingValue} * var(--spacing-unit, 0.5rem))
                @if $prop2 == "r"
                  &:last-child
                    #{$value}-#{$value2}: 0
                @if $prop2 == "b"
                  &:last-child
                    #{$value}-#{$value2}: 0
                @else if $prop2 == "l"
                  &:first-child
                    #{$value}-#{$value2}: 0
                @else if $prop2 == "t"
                  &:first-child
                    #{$value}-#{$value2}: 0
      //ml-xs-1 overwrites child-ml-xs-2  
      @each $prop, $value in $boxModel
        @each $prop2, $value2 in $positions
          @each $spacing, $spacingValue in $spacings
            .#{$prop}-#{$breakpoint}-#{$spacing}
              #{$value}-#{$value2}: calc(#{$spacingValue} * var(--spacing-unit, 0.5rem))
            .#{$prop}#{$prop2}-#{$breakpoint}-#{$spacing}
              #{$value}-#{$value2}: calc(#{$spacingValue} * var(--spacing-unit, 0.5rem))

//Borders
.border
  border: var(--border-size, 0.1rem) solid var(--color-border)
@each $prop,$value in $positions
  .border-#{$value}
    border-#{$value}: var(--border-size, 0.1rem) solid var(--color-border)
.border-pill
  border-radius: 1.6rem
.border-circle
  border-radius: 100% 
@for $i from 1 through 5
  .border-#{$i}
    border-width: $i*0.1rem !important


  
